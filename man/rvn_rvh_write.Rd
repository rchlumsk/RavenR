% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rvn_rvh_overwrite.R, R/rvn_rvh_write.R
\name{rvn_rvh_overwrite}
\alias{rvn_rvh_overwrite}
\alias{rvn_rvh_write}
\title{Write/Overwrite Raven .rvh (watershed discretization) file}
\usage{
rvn_rvh_overwrite(orig_file, filename, SBtable, HRUtable)

rvn_rvh_write(
  filename,
  SBtable,
  HRUtable,
  description = "Generated by RavenR rvn_rvh_write",
  author = NULL
)
}
\arguments{
\item{orig_file}{original .rvh file, if overwriting. Must be different from  that specified by filename.}

\item{filename}{Name of .rvh file, with extension}

\item{SBtable}{Valid subbasin dataframe with required columns "SBID", "Name", "Downstream_ID", "Profile",
"ReachLength", and "Gauged". Can have additional columns.}

\item{HRUtable}{Valid HRU dataframe with required columns 'ID', 'Area', 'Elevation', 'Latitude', 'Longitude',
'SBID', 'LandUse', 'Vegetation', 'SoilProfile', 'Terrain', 'Aquifer', 'Slope', and 'Aspect'. Can have additional columns.}

\item{description}{(optional) Description added after file header}

\item{author}{(optional) Name of author, to be printed in file header.}
}
\value{
TRUE returns TRUE if function runs properly
}
\description{
Given an HRU and SubBasin dataframe, writes to the specified .rvh file or, in the case of rvn_rvh_overwrite,
just overwrites the :SubBasins-:EndSubBasins and :HRUs-:EndHRUs blocks, retaining all other content.
}
\details{
rvn_rvh_write is typically used to create a 'clean' .rvh file. rvn_rvh_overwrite is usually used
after reading an original .rvh file and processing the HRU and SubBasin tables, using (e.g., rvh.clean)
}
\section{Functions}{
\itemize{
\item \code{rvn_rvh_overwrite}: Overwrite contents of original .rvh file
}}

\examples{
## Example: write a blank rvh file
## create some blank tables
sbs_data <- rvn_rvh_blankSBdf(nSubBasins = 1)
hru_data <- rvn_rvh_blankHRUdf(nHRUs = 3)

# write to rvh file
rvn_rvh_write("Blank.rvh",
              SBtable = sbs_data,
              HRUtable = hru_data,
              description = "Example output - Blank Watershed Discretization File",
              author = "Raven Development Team")

# Example: Read in an rvh, clean its contents and write back to new file
nith <- system.file("extdata","Nith.rvh",package = "RavenR")
rvh <- rvn_rvh_read(nith)

# remove HRUs covering less than 5\% of the total area
rvh$HRUtable <- rvn_rvh_cleanhrus(rvh$HRUtable, rvh$SBtable, area_tol = 0.05)

# write to new file, while preserving all unedited information using rvn_rvh_overwrite:
rvn_rvh_overwrite(nith,"Nith_cleaned.rvh",
                  SBtable = rvh$SBtable,
                  HRUtable = rvh$HRUtable)

# write just the Subbasin and HRU tables to new file using rvn_rvh_write:
rvn_rvh_write("Nith_cleaned_write.rvh",
                  SBtable = rvh$SBtable,
                  HRUtable = rvh$HRUtable)

}
\seealso{
\code{\link{rvn_rvh_read}} for the function used to read in the HRU and SubBasin data
\code{\link{rvn_rvh_cleanhrus}} for the function used to process HRU dataframe\cr
For generating blank SubBasin and HRU tables, see: \code{\link{rvn_rvh_blankSBdf}} and \code{\link{rvn_rvh_blankHRUdf}}
See also the \href{http://raven.uwaterloo.ca/}{Raven web site}
}
\author{
James R. Craig, University of Waterloo

Leland Scantlebury
}
\keyword{HRUs}
\keyword{Raven}
\keyword{rvh}
\keyword{write}
