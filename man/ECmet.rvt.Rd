% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ECmet.rvt.R
\name{ECmet.rvt}
\alias{ECmet.rvt}
\title{EC Climate Station File Conversion}
\usage{
ECmet.rvt(ff, prd = NULL, stnName = NULL, forcing.set = 1,
  met.prefix = T, write.redirect = F, write.stndata = F,
  perform.qc = F)
}
\arguments{
\item{ff}{EC climate data file paths in a string vector}

\item{prd}{(optional) data period to use in .rvt file}

\item{stnName}{(optional) station name to use (instead of name in file)}

\item{forcing.set}{(optional) specifies the set of forcings to print to file}

\item{met.prefix}{(optional) prefixes the file name with "met_"}

\item{write.redirect}{(optional) write the :RedirectToFile commands in a
separate .rvt file}

\item{write.stndata}{(optional) write the gauge data to a separate .rvt file}

\item{perform.qc}{(optional) quality controls the data before writing to
file (not yet implemented!)}
}
\value{
\item{TRUE}{return TRUE if the function is executed properly}
}
\description{
Note - this function is designated to be rewritten using the weathercan package
available on Github to pull Environment Canada data directly
}
\details{
ECmet.rvt converts Environment Canada historical meteorological data for a
given station into the .rvt format usable in Raven.

This function accepts a set of files and parses them into a single time
series in the .rvt format for Raven. The function prints in the :MultiData
format; the particular set of forcings to print can be set with the
forcing.set command. The files should be downloaded in a .csv Date-Data
format with missing days included. The download website is linked below.
Note that the first file passed is used to extract the gauge data, and the
remaining files are compared to the ClimateID of the first file to ensure
consistency.

ff should be a string vector (or single string) of climate file paths. The
first file is used to obtain the station metadata, and the subsequent files
are checked for consistency against the first file to ensure there is not a
mix of climate stations supplied. The files do not have to be supplied in
chronological order as long as they belong to the same climate station.

prd is used by the xts formatted-data to restrict the data reported in .rvt
files, for each station, to this period. The prd should be defined in
"YYYY-MM-DD/YYYY-MM-DD" string format. If the period supplied results in an
empty time series (i.e. non-overlapping time periods), an error will be
thrown.

stnName can be supplied to overwrite the station name that is otherwise
obtained from the Station Name field in the climate file.

met.prefix supplies the "met_" prefix to the .rvt file name, which may be
useful in organizing multiple climate data files.

forcing.set specifies the set of forcings to print to .rvt file. Currently
there are only two available sets. A value of 1 prints total precipitation,
and 2 splits the precipitation into rainfall and snowfall. In some cases the
EC data provides only total precipitation, which is a good check to make for
the particular climate station before printing rvt files. Both sets
currently print max and min daily temperature. Future extensions to this
function may provide more options for forcing sets.

write.redirect will print out the :RedirectToFile commands in a separate
file, met_redirects.rvt. These commands can be copied into the main model's
.rvt file to redirect to the produced time series files. The function will
append to the file if it already exists, meaning that this works for
iterations of this function.

write.stndata wil print out the gauge metadata to file (met_stndata.rvt) in
the .rvt format, which is required to include a meterological station in
Raven. The function will append to the file if it already exists, meaning
that this works for iterations of this function.

perform.qc is currently under construction and is not yet available; setting
to TRUE will result in an warning.

The function has several built-in data quality checks. These include: -
checking that all supplied files are for the same climate station - ensuring
the timestep (data resolution) is the same in each file - automatically
combining time series and ensuring there are no gaps in the data supplied
(i.e. time gaps, not missing values) - check for missing data and issuing a
warning that post-processing will be required

### FUNCTION IS CURRENTLY IN BETA MODE AND UNDERGOING TESTING + UPDATES ###

Current limitations of the function: - quality control is not implemented;
does not check for common errors in data, does not infill missing values
(required for running in Raven, thus post-processing of files is likely
required) - only handles daily data (subdaily or monthly not yet handled)
}
\examples{
# warning: example not run, sample example for associated files only
\dontrun{
ff <- c("eng-daily-01012008-12312008.csv","eng-daily-01012007-12312007.csv")

# basic use, includes "met_" prefix
# default forcing.set (PRECIP, MAX TEMP, MIN TEMP)
ECmet.rvt(ff,forcing.set=1)

# set without prefix, different file created
  # forcing.set includes (RAINFALL, SNOWFALL, MAX TEMP, MIN TEMP)
ECmet.rvt(ff,forcing.set=2,met.prefix=F,write.stndata=T,write.redirect = T)
}

}
\seealso{
\code{\link{ECflow.rvt}} to convert WSC flow gauge data to Raven
format

Download EC climate data from
\href{http://climate.weather.gc.ca/historical_data/search_historic_data_e.html}{EC
Historical Data}

Download multiple years of climate data, see
\href{ftp://ftp.tor.ec.gc.ca/Pub/Get_More_Data_Plus_de_donnees/Readme.txt}{instructions}

See also \href{http://www.civil.uwaterloo.ca/jrcraig/}{James R.
Craig's research page} for software downloads, including the
\href{http://www.civil.uwaterloo.ca/jrcraig/Raven/Main.html}{Raven page}
}
\keyword{Raven}
\keyword{conversion}
\keyword{meteorological}
\keyword{rvt}
\keyword{station}
